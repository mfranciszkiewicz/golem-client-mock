<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GolemClientMockAPI</name>
    </assembly>
    <members>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ActivityState">
            <summary>
            
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum">
            <summary>
            Gets or Sets State
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.NewEnum">
            <summary>
            Enum NewEnum for New
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.DeployingEnum">
            <summary>
            Enum DeployingEnum for Deploying
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.ReadyEnum">
            <summary>
            Enum ReadyEnum for Ready
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.StartingEnum">
            <summary>
            Enum StartingEnum for Starting
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.ActiveEnum">
            <summary>
            Enum ActiveEnum for Active
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.UnresponsiveEnum">
            <summary>
            Enum UnresponsiveEnum for Unresponsive
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityState.StateEnum.TerminatedEnum">
            <summary>
            Enum TerminatedEnum for Terminated
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityState.State">
            <summary>
            Gets or Sets State
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityState.Reason">
            <summary>
            Reason for Activity termination (specified when Activity in Terminated state).
            </summary>
            <value>Reason for Activity termination (specified when Activity in Terminated state).</value>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityState.ErrorMessage">
            <summary>
            If error caused state change - error message shall be provided.
            </summary>
            <value>If error caused state change - error message shall be provided.</value>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityState.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityState.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityState.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityState.Equals(GolemClientMockAPI.ActivityAPI.Models.ActivityState)">
            <summary>
            Returns true if ActivityState instances are equal
            </summary>
            <param name="other">Instance of ActivityState to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityState.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.CurrentUsage">
            <summary>
            Current usage vector
            </summary>
            <value>Current usage vector</value>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum">
            <summary>
            Gets or Sets State
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.NewEnum">
            <summary>
            Enum NewEnum for New
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.DeployingEnum">
            <summary>
            Enum DeployingEnum for Deploying
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.ReadyEnum">
            <summary>
            Enum ReadyEnum for Ready
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.StartingEnum">
            <summary>
            Enum StartingEnum for Starting
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.ActiveEnum">
            <summary>
            Enum ActiveEnum for Active
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.UnresponsiveEnum">
            <summary>
            Enum UnresponsiveEnum for Unresponsive
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.StateEnum.TerminatedEnum">
            <summary>
            Enum TerminatedEnum for Terminated
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.State">
            <summary>
            Gets or Sets State
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.Reason">
            <summary>
            Reason for Activity termination (specified when Activity in Terminated state).
            </summary>
            <value>Reason for Activity termination (specified when Activity in Terminated state).</value>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.ErrorMessage">
            <summary>
            If error caused state change - error message shall be provided.
            </summary>
            <value>If error caused state change - error message shall be provided.</value>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.Equals(GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails)">
            <summary>
            Returns true if ActivityStateDetails instances are equal
            </summary>
            <param name="other">Instance of ActivityStateDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.Equals(GolemClientMockAPI.ActivityAPI.Models.CreateActivityError)">
            <summary>
            Returns true if CreateActivityError instances are equal
            </summary>
            <param name="other">Instance of CreateActivityError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.AgreementId">
            <summary>
            Gets or Sets AgreementId
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventTypeEnum">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventTypeEnum.CreateActivityEnum">
            <summary>
            Enum CreateActivityEnum for CreateActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventTypeEnum.ExecEnum">
            <summary>
            Enum ExecEnum for Exec
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventTypeEnum.DestroyActivityEnum">
            <summary>
            Enum DestroyActivityEnum for DestroyActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventTypeEnum.GetStateEnum">
            <summary>
            Enum GetStateEnum for GetState
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.EventType">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.ActivityId">
            <summary>
            Gets or Sets ActivityId
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.Equals(GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent)">
            <summary>
            Returns true if CreateActivityProviderEvent instances are equal
            </summary>
            <param name="other">Instance of CreateActivityProviderEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.CreateActivityProviderEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.Equals(GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError)">
            <summary>
            Returns true if DestroyActivityError instances are equal
            </summary>
            <param name="other">Instance of DestroyActivityError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.DestroyActivityError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ErrorBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.Equals(GolemClientMockAPI.ActivityAPI.Models.ErrorBase)">
            <summary>
            Returns true if ErrorBase instances are equal
            </summary>
            <param name="other">Instance of ErrorBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ErrorBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExecError">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExecError.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecError.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecError.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecError.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecError.Equals(GolemClientMockAPI.ActivityAPI.Models.ExecError)">
            <summary>
            Returns true if ExecError instances are equal
            </summary>
            <param name="other">Instance of ExecError to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecError.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.BatchId">
            <summary>
            Gets or Sets BatchId
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.ExeScript">
            <summary>
            Gets or Sets ExeScript
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventTypeEnum">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventTypeEnum.CreateActivityEnum">
            <summary>
            Enum CreateActivityEnum for CreateActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventTypeEnum.ExecEnum">
            <summary>
            Enum ExecEnum for Exec
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventTypeEnum.DestroyActivityEnum">
            <summary>
            Enum DestroyActivityEnum for DestroyActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventTypeEnum.GetStateEnum">
            <summary>
            Enum GetStateEnum for GetState
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.EventType">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.ActivityId">
            <summary>
            Gets or Sets ActivityId
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.Equals(GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent)">
            <summary>
            Returns true if ExecProviderEvent instances are equal
            </summary>
            <param name="other">Instance of ExecProviderEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExecProviderEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.Commands">
            <summary>
            Gets or Sets Commands
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.Equals(GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch)">
            <summary>
            Returns true if ExeScriptBatch instances are equal
            </summary>
            <param name="other">Instance of ExeScriptBatch to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptBatch.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.Command">
            <summary>
            Gets or Sets Command
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.Params">
            <summary>
            Gets or Sets Params
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.Equals(GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand)">
            <summary>
            Returns true if ExeScriptCommand instances are equal
            </summary>
            <param name="other">Instance of ExeScriptCommand to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommand.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.Index">
            <summary>
            Gets or Sets Index
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.IsBatchFinished">
            <summary>
            Gets or Sets IsBatchFinished
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.ResultEnum">
            <summary>
            Gets or Sets Result
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.ResultEnum.OkEnum">
            <summary>
            Enum OkEnum for Ok
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.ResultEnum.ErrorEnum">
            <summary>
            Enum ErrorEnum for Error
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.Result">
            <summary>
            Gets or Sets Result
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.Equals(GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult)">
            <summary>
            Returns true if ExeScriptCommandResult instances are equal
            </summary>
            <param name="other">Instance of ExeScriptCommandResult to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.Text">
            <summary>
            Gets or Sets Text
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.Equals(GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest)">
            <summary>
            Returns true if ExeScriptBatch instances are equal
            </summary>
            <param name="other">Instance of ExeScriptRequest to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Type">
            <summary>
            Gets or Sets Type
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Title">
            <summary>
            Gets or Sets Title
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Status">
            <summary>
            Gets or Sets Status
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Detail">
            <summary>
            Gets or Sets Detail
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Instance">
            <summary>
            Gets or Sets Instance
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.Equals(GolemClientMockAPI.ActivityAPI.Models.ProblemDetails)">
            <summary>
            Returns true if ProblemDetails instances are equal
            </summary>
            <param name="other">Instance of ProblemDetails to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProblemDetails.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventTypeEnum">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventTypeEnum.CreateActivityEnum">
            <summary>
            Enum CreateActivityEnum for CreateActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventTypeEnum.ExecEnum">
            <summary>
            Enum ExecEnum for Exec
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventTypeEnum.DestroyActivityEnum">
            <summary>
            Enum DestroyActivityEnum for DestroyActivity
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventTypeEnum.GetStateEnum">
            <summary>
            Enum GetStateEnum for GetState
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.EventType">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.ActivityId">
            <summary>
            Gets or Sets ActivityId
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.Equals(GolemClientMockAPI.ActivityAPI.Models.ProviderEvent)">
            <summary>
            Returns true if ProviderEvent instances are equal
            </summary>
            <param name="other">Instance of ProviderEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemClientMockAPI.ActivityAPI.Models.ProviderEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemClientMockAPI.Attributes.ValidateModelStateAttribute">
            <summary>
            Model state validation attribute
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Attributes.ValidateModelStateAttribute.OnActionExecuting(Microsoft.AspNetCore.Mvc.Filters.ActionExecutingContext)">
            <summary>
            Called before the action method is invoked
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:GolemClientMockAPI.Controllers.GolemNetHubAuthApiController.Authenticate">
            <summary>
            Authenticate within the hub
            </summary>
            <response code="200">Successful operation</response>
            <response code="403">Forbidden</response>
        </member>
        <member name="M:GolemClientMockAPI.Controllers.GolemNetHubAuthApiController.AuthDelete">
            <summary>
            Deactivate the authorization token within the hub
            </summary>
            <response code="200">Successful operation</response>
            <response code="403">Forbidden</response>
            <response code="405">Invalid input</response>
        </member>
        <member name="M:GolemClientMockAPI.Controllers.GolemNetHubMessageApiController.Poll">
            <summary>
            Receive a message
            </summary>
            <response code="200">Successful operation</response>
            <response code="403">Forbidden</response>
        </member>
        <member name="M:GolemClientMockAPI.Controllers.GolemNetHubMessageApiController.Send(GolemMarketMockAPI.GolemNetHubAPI.Models.Message)">
            <summary>
            Send a message
            </summary>
            <param name="body">Network message to send</param>
            <response code="200">Successful operation</response>
            <response code="403">Forbidden</response>
            <response code="405">Invalid input</response>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ActivityExecResult.Index">
            <summary>
            Index of command for which this is the result
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ActivityExecResult.IsBatchFinished">
            <summary>
            Indicates this was the last command in the batch
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ActivityExecResult.CurrentState">
            <summary>
            Current state of the Activity after the command
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ActivityExecResult.Message">
            <summary>
            Message resulting from executing the Activity command
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ActivityProviderEvent.ExeScript">
            <summary>
            ExeScript batch - relevant for Exec events.
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ExeScript.Text">
            <summary>
            The body of ExeScript
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.ExeScript.CommandCount">
            <summary>
            Number of commands in batch script
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.MarketProviderEvent.DemandProposal">
            <summary>
            For EventType = Proposal - this contains the received Demand Proposal
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.MarketProviderEvent.Agreement">
            <summary>
            For EventType = AgreementProposal - this contains received Agreement
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.MarketRequestorEvent.OfferProposal">
            <summary>
            For EventType = Proposal - this contains the received Offer Proposal
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.Proposal.Id">
            <summary>
            Proposal Id (as perceived by Proposal receiver)
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.Proposal.SendingSubscriptionId">
            <summary>
            SubscriptionId of the sender (required to identify the sending pipeline)
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Entities.Proposal.ReceivingSubscriptionId">
            <summary>
            SubscriptionId of the receiver (required to identify the receiving pipeline)
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.Entities.Proposal.StateEnum">
            <summary>
            * `Initial` - proposal arrived from the market as response to subscription
            * `Draft` - bespoke counter-proposal issued by one party directly to other party (negotiation phase)
            * `Rejected` by other party
            * `Accepted` - promoted into the Agreement draft
            * `Expired` - not accepted nor rejected before validity period 
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Mappers.PropertyMappers.ProcessJProperty(System.String,Newtonsoft.Json.Linq.JProperty,System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JToken})">
            <summary>
            Recursive traversal of json structure to extract properties.
            Accumulates the collected properties in the dictionary.
            </summary>
            <param name="parentPath"></param>
            <param name="property"></param>
            <returns></returns>
        </member>
        <member name="P:GolemClientMockAPI.Processors.InMemoryActivityProcessor.ProviderEventQueues">
            <summary>
            Collection of Provider Activity Event queues, indexed by Provider Node Id
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Processors.InMemoryActivityProcessor.ExeScriptBatchQueues">
            <summary>
            Collection of Requestor Activity Event queues, indexed by ExeScriptBatchIds
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Processors.InMemoryActivityProcessor.ActivityEventQueues">
            <summary>
            Collection of Requestor Activity Event queues, indexed by ActivityIds
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.InMemoryMarketProcessor.RequestorEventPipelines">
            <summary>
            Requestor subscription pipelines, indexed by SubscriptionId
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.InMemoryMarketProcessor.DemandSubscriptions">
            <summary>
            Dictionary of Demand subscriptionIds indexed by Demand/Proposal Ids which have been issued in those subscriptions.
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.InMemoryMarketProcessor.ProviderEventPipelines">
            <summary>
            Provider subscription pipelines, indexed by SubscriptionId
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.InMemoryMarketProcessor.OfferSubscriptions">
            <summary>
            Dictionary of Offer subscriptionIds indexed by Offer/Proposal Ids which have been issued in those subscriptions.
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.InMemoryMarketProcessor.AgreementResultPipelines">
            <summary>
            Dictionary of blocking queues of AgreementResultEnum, indexed by Agreement Id. 
            These are used to message the responses to ConfirmAgreement calls.
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Processors.InMemoryMarketProcessor.CancelAgreement(System.String)">
            <summary>
            
            </summary>
            <param name="agreementId"></param>
            <returns>true if cancel succeeds</returns>
        </member>
        <member name="P:GolemClientMockAPI.Processors.InMemoryNetHubProcessor.NodeDescriptorsByNodeIds">
            <summary>
            Dictionary of NodeDescriptors indexed by NodeIds
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Processors.InMemoryNetHubProcessor.GetAddressRouting(System.String)">
            <summary>
            Resolve all destination nodes based on destination address.
            NOTE: This would also include multicasting logic, if required.
            </summary>
            <param name="destinationAddress"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Processors.IRequestorActivityProcessor.CreateActivity(System.String)">
            <summary>
            
            </summary>
            <param name="agreementId"></param>
            <returns>Created Activity</returns>
        </member>
        <member name="M:GolemClientMockAPI.Processors.IRequestorActivityProcessor.ExecAsync(System.String,GolemClientMockAPI.Entities.ExeScript)">
            <summary>
            
            </summary>
            <param name="activityId"></param>
            <param name="exeScript"></param>
            <returns>exeScript batch id</returns>
        </member>
        <member name="M:GolemClientMockAPI.Processors.IRequestorActivityProcessor.GetExecBatchResultsAsync(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="exeScriptBatchId"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Processors.IRequestorActivityProcessor.DestroyActivity(System.String)">
            <summary>
            
            </summary>
            <param name="activityId"></param>
        </member>
        <member name="M:GolemClientMockAPI.Processors.IRequestorActivityProcessor.GetStateDetails(System.String,System.Single)">
            <summary>
            
            </summary>
            <param name="activityId"></param>
            <param name="timeout"></param>
            <returns></returns>
        </member>
        <member name="P:GolemClientMockAPI.Processors.Operations.Activity.InMemoryActivityOperationBase.ExeBatchQueues">
            <summary>
            ExeScript Result queues, indexed by Batch Ids
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Processors.Operations.Activity.InMemoryActivityOperationBase.ActivityStateQueues">
            <summary>
            Activity State Details queues, indexed by activityId
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Processors.Operations.CancelAgreementOperation.SendCancelAgreement(System.String)">
            <summary>
            - check Agreement state 
              - if Proposed it means the Agreement hasn't been approved yet
                - Set Agreement to Cancelled
                - send Cancelled AgreementResult to Requestor side AgreementResultPipeline (to break any hanging ConfirmAgreement calls)
                - return true
              - if not Proposed - it means the Provider has already approved the agreement - cannot cancel
                - return false
            </summary>
            <param name="agreementId"></param>
            <returns></returns>
        </member>
        <member name="F:GolemClientMockAPI.Processors.Operations.InMemoryMarketOperationBase.RequestorEventPipelines">
            <summary>
            Requestor subscription pipelines, indexed by SubscriptionId
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.Operations.InMemoryMarketOperationBase.DemandSubscriptions">
            <summary>
            Dictionary of Demand subscriptionIds indexed by Demand/Proposal Ids which have been issued in those subscriptions.
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.Operations.InMemoryMarketOperationBase.ProviderEventPipelines">
            <summary>
            Provider subscription pipelines, indexed by SubscriptionId
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Processors.Operations.InMemoryMarketOperationBase.OfferSubscriptions">
            <summary>
            Dictionary of Offer subscriptionIds indexed by Offer/Proposal Ids which have been issued in those subscriptions.
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IActivityRepository.CreateExeScriptBatch(System.String,GolemClientMockAPI.Entities.ExeScript)">
            <summary>
            Persists the exeScript batch under unique batch id
            </summary>
            <param name="exeScript"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IActivityRepository.GetExeScriptBatch(System.String)">
            <summary>
            Fetch the persisted exescript batch by batchId.
            </summary>
            <param name="batchId"></param>
            <returns></returns>
        </member>
        <member name="P:GolemClientMockAPI.Repository.InProcessSubscriptionProposalRepository.Subscriptions">
            <summary>
            Collection of subscriptions, indexed by SubscriptionId
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Repository.InProcessSubscriptionProposalRepository.SubscriptionProposals">
            <summary>
            Collection of lists of proposals RECEIVED by subscriptions, indexed by SubscriptionId
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Repository.InProcessSubscriptionProposalRepository.DemandProposals">
            <summary>
            Collection of Demand proposals, indexed by Demand Proposal Id
            </summary>
        </member>
        <member name="P:GolemClientMockAPI.Repository.InProcessSubscriptionProposalRepository.OfferProposals">
            <summary>
            Collection of Offer proposals, indexed by Offer Proposal Id
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Repository.InProcessSubscriptionProposalRepository.GetOfferProposal(System.String)">
            <summary>
            OK, so here we're searching for offer proposal by offer Id - we need to look in Demand subscriptions!!!
            </summary>
            <param name="offerProposalId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.SaveDemandProposal(System.String,System.String,GolemClientMockAPI.Entities.Demand,System.String,GolemClientMockAPI.Entities.Proposal.StateEnum)">
            <summary>
            Persists a Demand Proposal.
            </summary>
            <param name="subscriptionId">"Receiving" (Provider) subscription Id</param>
            <param name="demand"></param>
            <param name="offerId">If this Demand Proposal is a counter-proposal to a specific Offer, put OfferId here.</param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.SaveOfferProposal(System.String,System.String,GolemClientMockAPI.Entities.Offer,System.String,GolemClientMockAPI.Entities.Proposal.StateEnum)">
            <summary>
            Persists an Offer Proposal.
            </summary>
            <param name="subscriptionId">"Receiving" (Requestor) subscription Id</param>
            <param name="offer"></param>
            <param name="demandId">If this Offer Proposal is a counter-proposal to a specific Demand, put DemandId here.</param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.GetOfferProposals(System.String,System.Nullable{System.Int64})">
            <summary>
            Get Proposals received by Subscription
            </summary>
            <param name="subscriptionId">Receiving (Requestor) subscription</param>
            <param name="lastReceivedProposalId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.GetOfferProposal(System.String)">
            <summary>
            Get Offer Proposal by Proposal Id
            </summary>
            <param name="offerProposalId">Offer Id of the proposal</param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.GetDemandProposals(System.String,System.Nullable{System.Int64})">
            <summary>
            Get Proposals received by Subscription
            </summary>
            <param name="subscriptionId">Receiving (Provider) subscription</param>
            <param name="lastReceivedProposalId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.IProposalRepository.GetDemandProposal(System.String)">
            <summary>
            Get Demand Proposal by Proposal Id
            </summary>
            <param name="demandProposalId">Demand Id of the proposal</param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.CreateDemandSubscription(GolemClientMockAPI.Entities.Demand)">
            <summary>
            Persist the Demand subscription.
            </summary>
            <param name="demand"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.GetDemandSubscription(System.String)">
            <summary>
            Fetch the Subscription based on subscriptionId.
            </summary>
            <param name="subscriptionId"></param>
            <returns>null if Demand Subscription not found.</returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.GetActiveDemandSubscriptions(System.String)">
            <summary>
            Fetch the active Demand Subscriptions for given nodeId.
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.DeleteDemandSubscription(System.String)">
            <summary>
            Remove the Demand subscription.
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.UpdateLastProposalId(System.String,System.Nullable{System.Int32})">
            <summary>
            Persist the most recently returned Proposal Id against Subscription, 
            so that the engine knows which Proposal should it return on next call. 
            </summary>
            <param name="subscriptionId"></param>
            <param name="internalId"></param>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.UpdateLastActive(System.String,System.DateTime)">
            <summary>
            Persist the LastActiveDate for a subscription. 
            </summary>
            <param name="subscriptionId"></param>
            <param name="timestamp"></param>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.CreateOfferSubscription(GolemClientMockAPI.Entities.Offer)">
            <summary>
            Persist the Offer subscription.
            </summary>
            <param name="offer"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.GetOfferSubscription(System.String)">
            <summary>
            Fetch the Subscription based on subscriptionId.
            </summary>
            <param name="subscriptionId"></param>
            <returns>null if Offer Subscription not found.</returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.GetActiveOfferSubscriptions(System.String)">
            <summary>
            Fetch the active Offer Subscriptions for given nodeId.
            </summary>
            <param name="nodeId"></param>
            <returns></returns>
        </member>
        <member name="M:GolemClientMockAPI.Repository.ISubscriptionRepository.DeleteOfferSubscription(System.String)">
            <summary>
            Remove the Offer subscription.
            </summary>
            <param name="subscriptionId"></param>
            <returns></returns>
        </member>
        <member name="T:GolemClientMockAPI.Security.BearerAuthenticationHandler">
            <summary>
            class to handle bearer authentication.
            </summary>
        </member>
        <member name="F:GolemClientMockAPI.Security.BearerAuthenticationHandler.SchemeName">
            <summary>
            scheme name for authentication handler.
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Security.BearerAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            verify that require authorization header exists.
            </summary>
        </member>
        <member name="T:GolemClientMockAPI.Startup">
            <summary>
            Startup
            </summary>
        </member>
        <member name="M:GolemClientMockAPI.Startup.#ctor(Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="configuration"></param>
        </member>
        <member name="M:GolemClientMockAPI.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:GolemClientMockAPI.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IHostingEnvironment,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="loggerFactory"></param>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.ActivityControlApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityControlApiController.CreateActivity(System.String)">
            <summary>
            Creates new Activity based on given Agreement.
            </summary>
            <param name="agreementId"></param>
            <response code="201">Success</response>
            <response code="400">Bad Request</response>
            <response code="403">Forbidden</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityControlApiController.DestroyActivity(System.String)">
            <summary>
            Destroys given Activity.
            </summary>
            <param name="activityId"></param>
            <response code="200">Success</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityControlApiController.Exec(System.String,GolemClientMockAPI.ActivityAPI.Models.ExeScriptRequest)">
            <summary>
            Executes an ExeScript batch within a given Activity.
            </summary>
            <param name="activityId"></param>
            <param name="script"></param>
            <response code="200">Success</response>
            <response code="400">Bad Request</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityControlApiController.GetExecBatchResults(System.String,System.String,System.Nullable{System.Single})">
            <summary>
            Queries for ExeScript batch results.
            </summary>
            <param name="activityId"></param>
            <param name="batchId"></param>
            <param name="timeout"></param>
            <response code="200">Success</response>
            <response code="400">Bad Request</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.ActivityProviderGatewayApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityProviderGatewayApiController.CollectActivityEvents(System.Nullable{System.Single})">
            <summary>
            Queries for ExeScript batch results.
            </summary>
            <param name="timeout"></param>
            <response code="200">Success</response>
            <response code="403">Forbidden</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityProviderGatewayApiController.PutActivityStateDetails(System.String,GolemClientMockAPI.ActivityAPI.Models.ActivityStateDetails)">
            <summary>
            Pass activity state (which may include error details)
            </summary>
            <param name="activityId"></param>
            <param name="state"></param>
            <response code="200">Success</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityProviderGatewayApiController.PutExeScriptResult(System.String,System.String,GolemClientMockAPI.ActivityAPI.Models.ExeScriptCommandResult)">
            <summary>
            Pass result of individual ExeScript command executed within the batch.
            </summary>
            <param name="activityId"></param>
            <param name="batchId"></param>
            <param name="commandResult"></param>
            <response code="200">Success</response>
            <response code="403">Forbidden</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.ActivityStateApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityStateApiController.GetCurrentUsage(System.Nullable{System.Int32})">
            <summary>
            Get usage of specified Activity.
            </summary>
            <param name="activityId"></param>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityStateApiController.GetRunningCommand(System.Nullable{System.Int32})">
            <summary>
            Get running command for a specified Activity.
            </summary>
            <param name="activityId"></param>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.ActivityStateApiController.GetState(System.Nullable{System.Int32})">
            <summary>
            Get state of specified Activity.
            </summary>
            <param name="activityId"></param>
            <response code="200">Success</response>
            <response code="404">Not Found</response>
            <response code="500">Server Error</response>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.MarketCommonApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketCommonApiController.GetAgreement(System.String)">
            <summary>
            Fetches agreement with given agreement id.
            </summary>
            <param name="agreementId"></param>
            <response code="200">Agreement.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketCommonApiController.TerminateAgreement(System.String)">
            <summary>
            Terminates approved Agreement.
            </summary>
            <param name="agreementId"></param>
            <response code="204">Agreement terminated.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="409">Agreement not in Approved state.</response>
            <response code="410">Agreement cancelled by the Requstor.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.MarketProviderApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.ApproveAgreement(System.String,System.Nullable{System.Single})">
            <summary>
            Approves Agreement proposed by the Reqestor.
            </summary>
            <remarks>This is a blocking operation.  It returns one of the following options: * &#x60;Ok&#x60; - Indicates that the approved Agreement has been successfully delivered to the Requestor and acknowledged.   - The Requestor side has been notified about the Provider's commitment     to the Agreement.   - The Provider is now ready to accept a request to start an Activity     as described in the negotiated agreement.   - The Requestor's corresponding ConfirmAgreement call returns Ok after     the one on the Provider side.  * &#x60;Cancelled&#x60; - Indicates that before delivering the approved Agreement, the Requestor has called &#x60;cancelAgreement&#x60;, thus invalidating the Agreement. The Provider may attempt to return to the Negotiation phase by sending a new Proposal.  **Note**: It is expected from the Provider node implementation to "ring-fence" the resources required to fulfill the Agreement before the ApproveAgreement is sent. However, the resources should not be fully committed until &#x60;Ok&#x60; response is received from the &#x60;approveAgreement&#x60; call.  **Note**: Mutually exclusive with &#x60;rejectAgreement&#x60;. </remarks>
            <param name="agreementId"></param>
            <param name="timeout"></param>
            <response code="204">Agreement approved.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="409">Agreement already rejected.</response>
            <response code="410">Agreement cancelled by the Requstor.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.CollectDemands(System.String,System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Reads Market responses to published Offer.
            </summary>
            <remarks>This is a blocking operation. It will not return until there is at least one new event.  **Note**: When &#x60;collectDemands&#x60; is waiting, simultaneous call to &#x60;unsubscribeOffer&#x60; on the same &#x60;subscriptionId&#x60; should result in \&quot;Subscription does not exist\&quot; error returned from &#x60;collectDemands&#x60;.  **Note**: Specification requires this endpoint to support list of specific Proposal Ids to listen for messages related only to specific Proposals. This is not covered yet. </remarks>
            <param name="subscriptionId"></param>
            <param name="timeout"></param>
            <param name="maxEvents"></param>
            <response code="200">Proposal or Agreement event list.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.CreateProposalOffer(GolemMarketMockAPI.MarketAPI.Models.Proposal,System.String,System.String)">
            <summary>
            Responds with a bespoke Offer to received Demand.
            </summary>
            <remarks>Creates and sends a modified version of original Offer (a counter-proposal) adjusted to previously received Proposal (ie. Demand). Changes Proposal state to &#x60;Draft&#x60;. Returns created Proposal id. </remarks>
            <param name="body"></param>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="201">Counter Proposal created.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal rejected.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.GetOffers">
            <summary>
            Fetches all active Offers which have been published by the Provider.
            </summary>
            <response code="200">Offer list.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.GetProposalDemand(System.String,System.String)">
            <summary>
            Fetches Proposal (Demand) with given id.
            </summary>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="200">Proposal.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal rejected.</response>
            <response code="0">Unexpected ErrorMessage.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.PostQueryReplyOffers(GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply,System.String,System.String)">
            <summary>
            Handles dynamic property query.
            </summary>
            <remarks>The Market Matching Mechanism, when resolving the match relation for the specific Demand-Offer pair, is to detect the "dynamic" properties required (via constraints) by the other side. At this point, it is able to query the issuing node for those properties and submit the other side's requested properties as the context of the query.  **Note**: The property query responses may be submitted in "chunks", ie. the responder may choose to resolve "quick"/lightweight" properties faster and provide response sooner, while still working on more time-consuming properties in the background. Therefore the response contains both the resolved properties, as well as list of properties which responder knows still require resolution.  **Note**: This method must be implemented for Market API Capability Level 2. </remarks>
            <param name="body"></param>
            <param name="subscriptionId"></param>
            <param name="queryId"></param>
            <response code="204">OK, query reply posted.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.RejectAgreement(System.String)">
            <summary>
            Rejects Agreement proposed by the Requestor.
            </summary>
            <remarks>The Requestor side is notified about the Provider's decision to reject a negotiated agreement. This effectively stops the Agreement handshake.  **Note**: Mutually exclusive with &#x60;approveAgreement&#x60;. </remarks>
            <param name="agreementId"></param>
            <response code="204">Agreement rejected.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="409">Agreement already approved.</response>
            <response code="410">Agreement cancelled by the Requstor.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.RejectProposalDemand(System.String,System.String)">
            <summary>
            Rejects Proposal (Demand).
            </summary>
            <remarks>Effectively ends a Negotiation chain - it explicitly indicates that the sender will not create another counter-Proposal. </remarks>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="204">Proposal rejected.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal already rejected.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.SubscribeOffer(GolemMarketMockAPI.MarketAPI.Models.Offer)">
            <summary>
            Publishes Provider capabilities via Offer.
            </summary>
            <remarks>Offer object can be considered an \&quot;open\&quot; or public Offer, as it is not directed at a specific Requestor, but rather is sent to the market so that the matching mechanism implementation can associate relevant Demands.  **Note**: it is an \&quot;atomic\&quot; operation, ie. as soon as Subscription is placed, the Offer is published on the market. </remarks>
            <param name="body"></param>
            <response code="201">Subscribed.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketProviderApiController.UnsubscribeOffer(System.String)">
            <summary>
            Stop subscription for previously published Offer.
            </summary>
            <remarks>Stop receiving Proposals.  **Note**: this will terminate all pending &#x60;collectDemands&#x60; calls on this subscription. This implies, that client code should not &#x60;unsubscribeOffer&#x60; before it has received all expected/useful inputs from &#x60;collectDemands&#x60;. </remarks>
            <param name="subscriptionId"></param>
            <response code="204">Offer revoked.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Already unsubscribed.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="T:GolemMarketMockAPI.Controllers.MarketRequestorApiController">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.CancelAgreement(System.String)">
            <summary>
            Cancels agreement.
            </summary>
            <remarks>Causes the awaiting &#x60;waitForApproval&#x60; call to return with &#x60;Cancelled&#x60; response. </remarks>
            <param name="agreementId"></param>
            <response code="204">Agreement cancelled.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="409">Agreement already approved.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.CollectOffers(System.String,System.Nullable{System.Single},System.Nullable{System.Int32})">
            <summary>
            Reads Market responses to published Demand.
            </summary>
            <remarks>This is a blocking operation. It will not return until there is at least one new event.  **Note**: When &#x60;collectOffers&#x60; is waiting, simultaneous call to &#x60;unsubscribeDemand&#x60; on the same &#x60;subscriptionId&#x60; should result in \&quot;Subscription does not exist\&quot; error returned from &#x60;collectOffers&#x60;.  **Note**: Specification requires this endpoint to support list of specific Proposal Ids to listen for messages related only to specific Proposals. This is not covered yet. </remarks>
            <param name="subscriptionId"></param>
            <param name="timeout"></param>
            <param name="maxEvents"></param>
            <response code="200">Proposal event list.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.ConfirmAgreement(System.String)">
            <summary>
            Sends Agreement draft to the Provider.
            </summary>
            <remarks>Signs Agreement self-created via &#x60;createAgreement&#x60; and sends it to the Provider. </remarks>
            <param name="agreementId"></param>
            <response code="204">Agreement confirmed.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Agreement cancelled.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.CreateAgreement(GolemMarketMockAPI.MarketAPI.Models.AgreementProposal)">
            <summary>
            Creates Agreement from selected Proposal.
            </summary>
            <remarks>Initiates the Agreement handshake phase.  Formulates an Agreement artifact from the Proposal indicated by the received Proposal Id.  The Approval Expiry Date is added to Agreement artifact and implies the effective timeout on the whole Agreement Confirmation sequence.  A successful call to &#x60;createAgreement&#x60; shall immediately be followed by a &#x60;confirmAgreement&#x60; and &#x60;waitForApproval&#x60; call in order to listen for responses from the Provider.  **Note**: Moves given Proposal to &#x60;Approved&#x60; state. </remarks>
            <param name="body"></param>
            <response code="201">Agreement created.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.CreateProposalDemand(GolemMarketMockAPI.MarketAPI.Models.Proposal,System.String,System.String)">
            <summary>
            Responds with a bespoke Demand to received Offer.
            </summary>
            <remarks>Creates and sends a modified version of original Demand (a counter-proposal) adjusted to previously received Proposal (ie. Offer). Changes Proposal state to &#x60;Draft&#x60;. Returns created Proposal id. </remarks>
            <param name="body"></param>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="201">Counter Proposal created.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal rejected.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.GetDemands">
            <summary>
            Fetches all active Demands which have been published by the Requestor.
            </summary>
            <response code="200">Demand list.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.GetProposalOffer(System.String,System.String)">
            <summary>
            Fetches Proposal (Offer) with given id.
            </summary>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="200">Proposal.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal rejected.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.PostQueryReplyDemands(GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply,System.String,System.String)">
            <summary>
            Handles dynamic property query.
            </summary>
            <remarks>The Market Matching Mechanism, when resolving the match relation for the specific Demand-Offer pair, is to detect the “dynamic” properties required (via constraints) by the other side. At this point, it is able to query the issuing node for those properties and submit the other side’s requested properties as the context of the query.  **Note**: The property query responses may be submitted in “chunks”, ie. the responder may choose to resolve ‘quick’/lightweight’ properties faster and provide response sooner, while still working on more time-consuming properties in the background. Therefore the response contains both the resolved properties, as well as list of properties which responder knows still require resolution.  **Note**: This method must be implemented for Market API Capability Level 2. </remarks>
            <param name="body"></param>
            <param name="subscriptionId"></param>
            <param name="queryId"></param>
            <response code="204">OK, query reply posted.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.RejectProposalOffer(System.String,System.String)">
            <summary>
            Rejects Proposal (Offer).
            </summary>
            <remarks>Effectively ends a Negotiation chain - it explicitly indicates that the sender will not create another counter-Proposal. </remarks>
            <param name="subscriptionId"></param>
            <param name="proposalId"></param>
            <response code="204">Proposal rejected.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Proposal already rejected.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.SubscribeDemand(GolemMarketMockAPI.MarketAPI.Models.Demand)">
            <summary>
            Publishes Requestor capabilities via Demand.
            </summary>
            <remarks>Demand object can be considered an \&quot;open\&quot; or public Demand, as it is not directed at a specific Provider, but rather is sent to the market so that the matching mechanism implementation can associate relevant Offers.  **Note**: it is an \&quot;atomic\&quot; operation, ie. as soon as Subscription is placed, the Demand is published on the market. </remarks>
            <param name="body"></param>
            <response code="201">Subscribed.</response>
            <response code="400">Bad request.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.UnsubscribeDemand(System.String)">
            <summary>
            Stop subscription for previously published Demand.
            </summary>
            <remarks>Stop receiving Proposals.  **Note**: this will terminate all pending &#x60;collectOffers&#x60; calls on this subscription. This implies, that client code should not &#x60;unsubscribeDemand&#x60; before it has received all expected/useful inputs from &#x60;collectOffers&#x60;. </remarks>
            <param name="subscriptionId"></param>
            <response code="204">Demand revoked.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="410">Already unsubscribed.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="M:GolemMarketMockAPI.Controllers.MarketRequestorApiController.WaitForApproval(System.String,System.Nullable{System.Single})">
            <summary>
            Waits for Agreement approval by the Provider.
            </summary>
            <remarks>This is a blocking operation. The call may be aborted by Requestor caller code. After the call is aborted, another &#x60;waitForApproval&#x60; call can be raised on the same Agreement Id.  It returns one of the following options: * &#x60;Ok&#x60; - Indicates that the Agreement has been approved by the Provider.   - The Provider is now ready to accept a request to start an Activity     as described in the negotiated agreement.   - The Requestor’s corresponding &#x60;waitForApproval&#x60; call returns Ok after     this on the Provider side.  * &#x60;Rejected&#x60; - Indicates that the Provider has called &#x60;rejectAgreement&#x60;,   which effectively stops the Agreement handshake. The Requestor may attempt   to return to the Negotiation phase by sending a new Proposal.  * &#x60;Cancelled&#x60; - Indicates that the Requestor himself has called  &#x60;cancelAgreement&#x60;, which effectively stops the Agreement handshake. </remarks>
            <param name="agreementId"></param>
            <param name="timeout"></param>
            <response code="200">Agreement approval result.</response>
            <response code="401">Authorization information is missing or invalid.</response>
            <response code="404">The specified resource was not found.</response>
            <response code="0">Unexpected error.</response>
        </member>
        <member name="T:GolemMarketMockAPI.Filters.BasePathFilter">
            <summary>
            BasePath Document Filter sets BasePath property of Swagger and removes it from the individual URL paths
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Filters.BasePathFilter.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="basePath">BasePath to remove from Operations</param>
        </member>
        <member name="P:GolemMarketMockAPI.Filters.BasePathFilter.BasePath">
            <summary>
            Gets the BasePath of the Swagger Doc
            </summary>
            <returns>The BasePath of the Swagger Doc</returns>
        </member>
        <member name="M:GolemMarketMockAPI.Filters.BasePathFilter.Apply(Swashbuckle.AspNetCore.Swagger.SwaggerDocument,Swashbuckle.AspNetCore.SwaggerGen.DocumentFilterContext)">
            <summary>
            Apply the filter
            </summary>
            <param name="swaggerDoc">SwaggerDocument</param>
            <param name="context">FilterContext</param>
        </member>
        <member name="T:GolemMarketMockAPI.Filters.GeneratePathParamsValidationFilter">
            <summary>
            Path Parameter Validation Rules Filter
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.Filters.GeneratePathParamsValidationFilter.Apply(Swashbuckle.AspNetCore.Swagger.Operation,Swashbuckle.AspNetCore.SwaggerGen.OperationFilterContext)">
            <summary>
            Constructor
            </summary>
            <param name="operation">Operation</param>
            <param name="context">OperationFilterContext</param>
        </member>
        <member name="T:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT.Equals(GolemMarketMockAPI.GolemNetHubAPI.Models.JWT)">
            <summary>
            Returns true if JWT instances are equal
            </summary>
            <param name="other">Instance of JWT to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.JWT.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.GolemNetHubAPI.Models.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.RequestId">
            <summary>
            Gets or Sets RequestId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.Destination">
            <summary>
            Destination address
            </summary>
            <value>Destination address</value>
        </member>
        <member name="P:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.Payload">
            <summary>
            Binary data (base64)
            </summary>
            <value>Binary data (base64)</value>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.Equals(GolemMarketMockAPI.GolemNetHubAPI.Models.Message)">
            <summary>
            Returns true if Message instances are equal
            </summary>
            <param name="other">Instance of Message to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.GolemNetHubAPI.Models.Message.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Agreement">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.AgreementId">
            <summary>
            Gets or Sets AgreementId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.Demand">
            <summary>
            Gets or Sets Demand
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.Offer">
            <summary>
            Gets or Sets Offer
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.ValidTo">
            <summary>
            End of validity period. Agreement needs to be accepted, rejected or cancellled before this date; otherwise will expire 
            </summary>
            <value>End of validity period. Agreement needs to be accepted, rejected or cancellled before this date; otherwise will expire </value>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.ApprovedDate">
            <summary>
            date of the Agreement approval
            </summary>
            <value>date of the Agreement approval</value>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum">
            <summary>
            * `Proposal` - newly created by a Requestor (based on Proposal) * `Pending` - confirmed by a Requestor and send to Provider for approval * `Cancelled` by a Requestor * `Rejected` by a Provider * `Approved` by both sides * `Expired` - not accepted, rejected nor cancelled within validity period * `Terminated` - finished after approval. 
            </summary>
            <value>* `Proposal` - newly created by a Requestor (based on Proposal) * `Pending` - confirmed by a Requestor and send to Provider for approval * `Cancelled` by a Requestor * `Rejected` by a Provider * `Approved` by both sides * `Expired` - not accepted, rejected nor cancelled within validity period * `Terminated` - finished after approval. </value>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.ProposalEnum">
            <summary>
            Enum ProposalEnum for Proposal
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.PendingEnum">
            <summary>
            Enum PendingEnum for Pending
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.CancelledEnum">
            <summary>
            Enum CancelledEnum for Cancelled
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.RejectedEnum">
            <summary>
            Enum RejectedEnum for Rejected
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.ApprovedEnum">
            <summary>
            Enum ApprovedEnum for Approved
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.ExpiredEnum">
            <summary>
            Enum ExpiredEnum for Expired
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Agreement.StateEnum.TerminatedEnum">
            <summary>
            Enum TerminatedEnum for Terminated
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.State">
            <summary>
            * &#x60;Proposal&#x60; - newly created by a Requestor (based on Proposal) * &#x60;Pending&#x60; - confirmed by a Requestor and send to Provider for approval * &#x60;Cancelled&#x60; by a Requestor * &#x60;Rejected&#x60; by a Provider * &#x60;Approved&#x60; by both sides * &#x60;Expired&#x60; - not accepted, rejected nor cancelled within validity period * &#x60;Terminated&#x60; - finished after approval. 
            </summary>
            <value>* &#x60;Proposal&#x60; - newly created by a Requestor (based on Proposal) * &#x60;Pending&#x60; - confirmed by a Requestor and send to Provider for approval * &#x60;Cancelled&#x60; by a Requestor * &#x60;Rejected&#x60; by a Provider * &#x60;Approved&#x60; by both sides * &#x60;Expired&#x60; - not accepted, rejected nor cancelled within validity period * &#x60;Terminated&#x60; - finished after approval. </value>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.ProposedSignature">
            <summary>
            Gets or Sets ProposedSignature
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.ApprovedSignature">
            <summary>
            Gets or Sets ApprovedSignature
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Agreement.CommittedSignature">
            <summary>
            Gets or Sets CommittedSignature
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Agreement.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Agreement.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Agreement.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Agreement.Equals(GolemMarketMockAPI.MarketAPI.Models.Agreement)">
            <summary>
            Returns true if Agreement instances are equal
            </summary>
            <param name="other">Instance of Agreement to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Agreement.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.Agreement">
            <summary>
            Gets or Sets Agreement
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.Equals(GolemMarketMockAPI.MarketAPI.Models.AgreementEvent)">
            <summary>
            Returns true if AgreementEvent instances are equal
            </summary>
            <param name="other">Instance of AgreementEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.ProposalId">
            <summary>
            id of the proposal to be promoted to the Agreement
            </summary>
            <value>id of the proposal to be promoted to the Agreement</value>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.ValidTo">
            <summary>
            End of validity period. Agreement needs to be accepted, rejected or cancellled before this date; otherwise will expire 
            </summary>
            <value>End of validity period. Agreement needs to be accepted, rejected or cancellled before this date; otherwise will expire </value>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.Equals(GolemMarketMockAPI.MarketAPI.Models.AgreementProposal)">
            <summary>
            Returns true if AgreementProposal instances are equal
            </summary>
            <param name="other">Instance of AgreementProposal to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.AgreementProposal.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Demand">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Demand.DemandId">
            <summary>
            Gets or Sets DemandId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Demand.RequestorId">
            <summary>
            Gets or Sets RequestorId
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Demand.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Demand.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Demand.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Demand.Equals(GolemMarketMockAPI.MarketAPI.Models.Demand)">
            <summary>
            Returns true if Demand instances are equal
            </summary>
            <param name="other">Instance of Demand to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Demand.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.Properties">
            <summary>
            Gets or Sets Properties
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.Constraints">
            <summary>
            Gets or Sets Constraints
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.Equals(GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase)">
            <summary>
            Returns true if DemandOfferBase instances are equal
            </summary>
            <param name="other">Instance of DemandOfferBase to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.DemandOfferBase.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.Message">
            <summary>
            Gets or Sets Message
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.Equals(GolemMarketMockAPI.MarketAPI.Models.ErrorMessage)">
            <summary>
            Returns true if Error instances are equal
            </summary>
            <param name="other">Instance of Error to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ErrorMessage.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Event">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Event.EventType">
            <summary>
            Gets or Sets EventType
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Event.EventDate">
            <summary>
            Gets or Sets EventDate
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Event.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Event.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Event.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Event.Equals(GolemMarketMockAPI.MarketAPI.Models.Event)">
            <summary>
            Returns true if Event instances are equal
            </summary>
            <param name="other">Instance of Event to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Event.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Offer">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Offer.OfferId">
            <summary>
            Gets or Sets OfferId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Offer.ProviderId">
            <summary>
            Gets or Sets ProviderId
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Offer.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Offer.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Offer.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Offer.Equals(GolemMarketMockAPI.MarketAPI.Models.Offer)">
            <summary>
            Returns true if Offer instances are equal
            </summary>
            <param name="other">Instance of Offer to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Offer.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.IssuerProperties">
            <summary>
            Gets or Sets IssuerProperties
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.QueryId">
            <summary>
            Gets or Sets QueryId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.QueriedProperties">
            <summary>
            Gets or Sets QueriedProperties
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.Equals(GolemMarketMockAPI.MarketAPI.Models.PropertyQuery)">
            <summary>
            Returns true if PropertyQuery instances are equal
            </summary>
            <param name="other">Instance of PropertyQuery to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQuery.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.PropertyQuery">
            <summary>
            Gets or Sets PropertyQuery
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.Equals(GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent)">
            <summary>
            Returns true if PropertyQueryEvent instances are equal
            </summary>
            <param name="other">Instance of PropertyQueryEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply">
            <summary>
            
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply.Equals(GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply)">
            <summary>
            Returns true if PropertyQueryReply instances are equal
            </summary>
            <param name="other">Instance of PropertyQueryReply to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.PropertyQueryReply.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Proposal">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Proposal.ProposalId">
            <summary>
            Gets or Sets ProposalId
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Proposal.IssuerId">
            <summary>
            Gets or Sets IssuerId
            </summary>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum">
            <summary>
            * `Initial` - proposal arrived from the market as response to subscription * `Draft` - bespoke counter-proposal issued by one party directly to other party (negotiation phase) * `Rejected` by other party * `Accepted` - promoted into the Agreement draft * `Expired` - not accepted nor rejected before validity period 
            </summary>
            <value>* `Initial` - proposal arrived from the market as response to subscription * `Draft` - bespoke counter-proposal issued by one party directly to other party (negotiation phase) * `Rejected` by other party * `Accepted` - promoted into the Agreement draft * `Expired` - not accepted nor rejected before validity period </value>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum.InitialEnum">
            <summary>
            Enum InitialEnum for Initial
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum.DraftEnum">
            <summary>
            Enum DraftEnum for Draft
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum.RejectedEnum">
            <summary>
            Enum RejectedEnum for Rejected
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum.AcceptedEnum">
            <summary>
            Enum AcceptedEnum for Accepted
            </summary>
        </member>
        <member name="F:GolemMarketMockAPI.MarketAPI.Models.Proposal.StateEnum.ExpiredEnum">
            <summary>
            Enum ExpiredEnum for Expired
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Proposal.State">
            <summary>
            * &#x60;Initial&#x60; - proposal arrived from the market as response to subscription * &#x60;Draft&#x60; - bespoke counter-proposal issued by one party directly to other party (negotiation phase) * &#x60;Rejected&#x60; by other party * &#x60;Accepted&#x60; - promoted into the Agreement draft * &#x60;Expired&#x60; - not accepted nor rejected before validity period 
            </summary>
            <value>* &#x60;Initial&#x60; - proposal arrived from the market as response to subscription * &#x60;Draft&#x60; - bespoke counter-proposal issued by one party directly to other party (negotiation phase) * &#x60;Rejected&#x60; by other party * &#x60;Accepted&#x60; - promoted into the Agreement draft * &#x60;Expired&#x60; - not accepted nor rejected before validity period </value>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.Proposal.PrevProposalId">
            <summary>
            id of the proposal from other side which this proposal responds to 
            </summary>
            <value>id of the proposal from other side which this proposal responds to </value>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Proposal.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Proposal.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Proposal.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Proposal.Equals(GolemMarketMockAPI.MarketAPI.Models.Proposal)">
            <summary>
            Returns true if Proposal instances are equal
            </summary>
            <param name="other">Instance of Proposal to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.Proposal.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
        <member name="T:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent">
            <summary>
            
            </summary>
        </member>
        <member name="P:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.Proposal">
            <summary>
            Gets or Sets Proposal
            </summary>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.ToString">
            <summary>
            Returns the string presentation of the object
            </summary>
            <returns>String presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.ToJson">
            <summary>
            Returns the JSON string presentation of the object
            </summary>
            <returns>JSON string presentation of the object</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.Equals(System.Object)">
            <summary>
            Returns true if objects are equal
            </summary>
            <param name="obj">Object to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.Equals(GolemMarketMockAPI.MarketAPI.Models.ProposalEvent)">
            <summary>
            Returns true if ProposalEvent instances are equal
            </summary>
            <param name="other">Instance of ProposalEvent to be compared</param>
            <returns>Boolean</returns>
        </member>
        <member name="M:GolemMarketMockAPI.MarketAPI.Models.ProposalEvent.GetHashCode">
            <summary>
            Gets the hash code
            </summary>
            <returns>Hash code</returns>
        </member>
    </members>
</doc>
